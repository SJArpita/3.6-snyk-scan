name: CI Checks
run-name: Running Terraform Checks by ${{ github.actor }}

on:
 pull_request:
   branches:
     - main

jobs:
  Initial-Checks:
    runs-on: ubuntu-latest

    steps:
    - name: Getting initiator name
      run: echo "Workflow initiated by ${{ github.actor }} from branch ${{ github.ref_name }}"

  terraform-checks:
    runs-on: ubuntu-latest
    needs: Initial-Checks
    outputs:
      status: ${{ job.status }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: latest
    
    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

  name: Snyk Infrastructure as Code
on: push
jobs:
  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check configuration files for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/iac@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # Scans the whole repository by default.
        # Alternatively, add the path to the configuration file that you would like to test.
        # For example `deployment.yaml` for a Kubernetes deployment manifest
        # or `main.tf` for a Terraform configuration file
        # with:
          # file: your-file-to-test.yaml
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  #################################################
  # Finally, update summary for snyk-check        #
  # Update needs statement to include snyk-checks #
  #################################################
  summary:
    needs: [terraform-checks] # add snyk-checks 
    runs-on: ubuntu-latest
    steps:
      - name: Adding markdown
        run: |
          TF_STATUS=${{ needs.terraform-checks.outputs.status }}
          # SNYK_STATUS=${{ needs.snyk-checks.outputs.status }}

          echo '## ðŸš€ Preparing Build Summary ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo "| Job Name        | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| tf-check       | $TF_STATUS |" >> $GITHUB_STEP_SUMMARY
          # echo " snyk-check     | $SNYK_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo '## Job ran by: ${{ github.actor }}' >> $GITHUB_STEP_SUMMARY
